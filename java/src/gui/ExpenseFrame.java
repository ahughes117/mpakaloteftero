package gui;

import entities.Expense;
import entities.ExpenseDL;
import entities.User;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import sql.Connector;
import util.Library;
import util.MesDial;
import util.StrVal;

/**
 *
 * @author Alex Hughes <alexhughes117@gmail.com>
 */
public class ExpenseFrame extends GUI {

    private ExpenseDL expenseDL;
    private Expense e;

    /**
     * Creates new form ExpenseFrame
     */
    public ExpenseFrame(GUI aPreviousFrame, Connector aConnector, int anID) {
        super(aPreviousFrame, aConnector, anID);

        initComponents();
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                shutdown();
            }
        });

        try {
            loadUserCombo();
            if (existing) {
                loadExpense();
            } else {
                e = new Expense();
            }
        } catch (SQLException ex) {
            MesDial.conError(this);
            Logger.getLogger(ExpenseFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        super.setFrameLocationCenter();
        this.setVisible(true);
    }

    private void loadUserCombo() throws SQLException {
        for(User usr : Library.getUsers()) {
            debiterCombo.addItem(usr.getUserID() + " - " + usr.getName() + " " + usr.getSurname());
            crediterCombo.addItem(usr.getUserID() + " - " + usr.getName() + " " + usr.getSurname());
        }
    }

    private void loadExpense() throws SQLException {

        //creating container object and requesting data from data layer
        e.setExpenseID(id);
        expenseDL = new ExpenseDL(c);
        expenseDL.setE(e);

        e = expenseDL.fetchExpense();

        //assigning values
        idL.setText(idL.getText() + Integer.toString(e.getExpenseID()));
        //TODO write combo code

        //moving to fields
        nameF.setText(e.getName());
        priceF.setText(e.formatPrice());
        descArea.setText(e.getDesc());

        //moving to check boxes
        if (e.isPaid()) {
            paidChk.setSelected(true);
        } else {
            paidChk.setSelected(false);
        }

        if (e.isPaidRequest()) {
            paidRequestChk.setSelected(true);
        } else {
            paidRequestChk.setSelected(false);
        }

        //finally printing dates
        dateL.setText("Date Created: " + StrVal.formatTimestamp(e.getDateCreated())
                + " || Date Modified: " + StrVal.formatTimestamp(e.getDateModified()));

    }

    private void saveExpense() throws SQLException {
        //parsing, if non-existent inserting, if existent updating
        expenseDL = new ExpenseDL(c);
        if (parseFields()) {
            expenseDL.setE(e);
            if (!existing) {
                expenseDL.insertExpense();
                existing = true;
            } else {
                expenseDL.updateExpense();
            }
        }
    }

    private boolean parseFields() {
        boolean successful = true;

        //surrounding with try and catch in order for the app not to blow because of casting
        try {
            if (debiterCombo.getSelectedIndex() != -1) {
                e.setDebiterID(StrVal.parseIdFromString((String) debiterCombo.getSelectedItem()));
            }
            if (crediterCombo.getSelectedIndex() != -1) {
                e.setCrediterID(StrVal.parseIdFromString((String) crediterCombo.getSelectedItem()));
            }
        } catch (Exception x) {
            successful = false;
        }

        e.setName(nameF.getText());
        e.setDesc(descArea.getText());

        //surrounding with try and catch in order to validate doubles
        try {
            e.setPrice(Double.parseDouble(priceF.getText()));
        } catch (Exception x) {
            successful = false;
        }

        if (paidChk.isSelected()) {
            e.setPaid(true);
        } else {
            e.setPaid(false);
        }

        if (paidRequestChk.isSelected()) {
            e.setPaidRequest(true);
        } else {
            e.setPaidRequest(false);
        }

        return successful;
    }

    public static boolean isInstanceAlive() {
        return instanceAlive;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        idL = new javax.swing.JLabel();
        debiterL = new javax.swing.JLabel();
        crediterL = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        paidChk = new javax.swing.JCheckBox();
        paidRequestChk = new javax.swing.JCheckBox();
        nameF = new javax.swing.JTextField();
        priceF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descArea = new javax.swing.JTextArea();
        debiterCombo = new javax.swing.JComboBox();
        crediterCombo = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        okBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        dateL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Expense ");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Expense"));

        idL.setText("expenseID:");

        debiterL.setText("Debiter:");

        crediterL.setText("Crediter:");

        jLabel4.setText("Name:");

        jLabel6.setText("Price:");

        paidChk.setText("Paid");

        paidRequestChk.setText("Requested as Paid");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Expense"));

        descArea.setColumns(20);
        descArea.setRows(5);
        jScrollPane1.setViewportView(descArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameF)
                            .addComponent(priceF)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(paidChk)
                            .addComponent(paidRequestChk))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(debiterL)
                            .addComponent(idL)
                            .addComponent(crediterL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(debiterCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(crediterCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(idL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(debiterL)
                    .addComponent(debiterCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crediterL)
                    .addComponent(crediterCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nameF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(priceF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paidChk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paidRequestChk)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        okBtn.setText("OK");

        backBtn.setText("<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okBtn)
                    .addComponent(backBtn))
                .addContainerGap())
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        dateL.setText("dateL");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dateL)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(dateL))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        shutdown();
    }//GEN-LAST:event_backBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox crediterCombo;
    private javax.swing.JLabel crediterL;
    private javax.swing.JLabel dateL;
    private javax.swing.JComboBox debiterCombo;
    private javax.swing.JLabel debiterL;
    private javax.swing.JTextArea descArea;
    private javax.swing.JLabel idL;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameF;
    private javax.swing.JButton okBtn;
    private javax.swing.JCheckBox paidChk;
    private javax.swing.JCheckBox paidRequestChk;
    private javax.swing.JTextField priceF;
    // End of variables declaration//GEN-END:variables
}
